apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
  labels:
    app: echo
    tier: backend
spec:
  replicas: 4                  # Number of replicas
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%            # Maximum pods that can be deployed during update = replicas + surge ( 4 + 1 = 5 )
      maxUnavailable: 25%      # Maximum pods that should be alive during update = replicas - surge ( 4 - 1 = 3 )
  selector:                    # Pod selector. Match all pods with specified labels
    matchLabels:
      app: echo
      tier: backend
  template:                    # Pod template used to create new pods
    metadata:
      labels:
        app: echo
        tier: backend
    spec:
      containers:
      - name: echo
        image: soaserele/echo:1
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          httpGet:
            path: /
            port: 80
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash","-c","sleep 30"]
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
